public class FactorialCalculator {
  
    public static Integer calculateFactorial(Integer n) {
       
        if (n < 0) {
            throw new IllegalArgumentException('Factorial is not defined for negative numbers');
        }
        
        
        if (n == 0 || n == 1) {
            return 1;
        }
        
      
        Integer result = 1;
        for (Integer i = 2; i <= n; i++) {
            result *= i;
            
            
            if (result < 0) {
                throw new LimitException('Factorial result too large for Integer data type');
            }
        }
        
        return result;
    }
    
    
    public static Integer calculateFactorialRecursive(Integer n) {
        if (n < 0) {
            throw new IllegalArgumentException('Factorial is not defined for negative numbers');
        }
        
        if (n == 0 || n == 1) {
            return 1;
        }
        
        return n * calculateFactorialRecursive(n - 1);
    }
    
  
    public static Long calculateLargeFactorial(Integer n) {
        if (n < 0) {
            throw new IllegalArgumentException('Factorial is not defined for negative numbers');
        }
        
        if (n == 0 || n == 1) {
            return 1;
        }
        
        Long result = 1;
        for (Integer i = 2; i <= n; i++) {
            result *= i;
        }
        
        return result;
    }
}

/*----------- o/p code ---------

try {
    System.debug('Factorial of 0: ' + FactorialCalculator.calculateFactorial(0));
    System.debug('Factorial of 1: ' + FactorialCalculator.calculateFactorial(1));
    System.debug('Factorial of 5: ' + FactorialCalculator.calculateFactorial(5));
    System.debug('Factorial of 10: ' + FactorialCalculator.calculateFactorial(10));
    
   
    System.debug('Recursive factorial of 7: ' + FactorialCalculator.calculateFactorialRecursive(7));
    
    
    System.debug('Large factorial of 20: ' + FactorialCalculator.calculateLargeFactorial(20));
    
   
    // System.debug('Factorial of 100: ' + FactorialCalculator.calculateFactorial(100));
} catch (Exception e) {
    System.debug('Error: ' + e.getMessage());
}
*/
